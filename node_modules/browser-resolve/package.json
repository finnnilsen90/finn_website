{
  "_args": [
    [
      {
        "raw": "browser-resolve@^1.11.2",
        "scope": null,
        "escapedName": "browser-resolve",
        "name": "browser-resolve",
        "rawSpec": "^1.11.2",
        "spec": ">=1.11.2 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\fnils\\Desktop\\finn_website\\node_modules\\jest-resolve"
    ]
  ],
  "_from": "browser-resolve@>=1.11.2 <2.0.0",
  "_id": "browser-resolve@1.11.3",
  "_inCache": true,
  "_location": "/browser-resolve",
  "_nodeVersion": "9.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/browser-resolve_1.11.3_1529379172805_0.2362090052739576"
  },
  "_npmUser": {
    "name": "defunctzombie",
    "email": "shtylman@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "browser-resolve@^1.11.2",
    "scope": null,
    "escapedName": "browser-resolve",
    "name": "browser-resolve",
    "rawSpec": "^1.11.2",
    "spec": ">=1.11.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/browserify",
    "/jest-resolve",
    "/module-deps"
  ],
  "_resolved": "https://registry.npmjs.org/browser-resolve/-/browser-resolve-1.11.3.tgz",
  "_shasum": "9b7cbb3d0f510e4cb86bdbd796124d28b5890af6",
  "_shrinkwrap": null,
  "_spec": "browser-resolve@^1.11.2",
  "_where": "C:\\Users\\fnils\\Desktop\\finn_website\\node_modules\\jest-resolve",
  "author": {
    "name": "Roman Shtylman",
    "email": "shtylman@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/shtylman/node-browser-resolve/issues"
  },
  "dependencies": {
    "resolve": "1.1.7"
  },
  "description": "resolve which handles browser field support in package.json",
  "devDependencies": {
    "mocha": "1.14.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-exDi1BYWB/6raKHmDTCicQfTkqwN5fioMFV4j8BsfMU4R2DK/QfZfK7kOVkmWCNANf0snkBzqGqAJBao9gZMdQ==",
    "shasum": "9b7cbb3d0f510e4cb86bdbd796124d28b5890af6",
    "tarball": "https://registry.npmjs.org/browser-resolve/-/browser-resolve-1.11.3.tgz",
    "fileCount": 5,
    "unpackedSize": 14998,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbKHlmCRA9TVsSAnZWagAAWcIP/1ZrXB7Nhom8YrcnFC6i\n/aCucQXcs3YePv4RRGe9o7foDpkRkDzceWBGtQiUPPvFbCkHuaiVgpiHQIOC\n+UGMLsk6FmbGcUIQf1+TwHL/jyGQf9SZ+KECxi66GikA92b2NmadOJa05QMk\nyGiymcfBqky7kKJs8e9arjwgMQltU9jOZsllLE2duGu0P8gnJlGTebsU9tGM\nc+Il1aysrAZmBpIKra1XBoXdIHIJ4L+ydch2FfSybioqcBNepBLIaWc52iXk\n+OZJwwq3XHqpdSr27DLHL+WU0FIHsT1m0hoeJQPIZmfWjMpsOVAHRBYyMcb+\n1626wcGpQCZZ2/QWxCWCRIQzRwNyp0bBO/+Pv6HrgqEX6NzdLy/y/971lImB\nOeTo1pUeimK9RnO6/z1Tm/PG33nGUJo1KnY58V9QjttJdlsC6HmqMCh/ct3a\nUodPfQdSs1Suxc5i+rQnxVqNMOx8vHPFYCnPDMpaXZEoVfzRbCwBP5T2Sj+o\ngYoDUBIdi1JWxHVDvtY7J+ybsb6imWidqqEDkWagNMpUx/0GlCxm8LVZ2Vgj\na0rcNNZAh4CDghXCFDSs3IgcarC4rE50/HAb10hUGyjEc9uzaqPrCBJGSSKM\n940OTHZLtF9akvWG8cn4VxTm09F3H/YBzhhfRzMGxAALJ3XKK03LwPViNkIC\nRDHd\r\n=O6EA\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.js",
    "empty.js"
  ],
  "gitHead": "427bb886cc22cc773651d3f2a51d4c5ea455870e",
  "homepage": "https://github.com/shtylman/node-browser-resolve#readme",
  "keywords": [
    "resolve",
    "browser"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "defunctzombie",
      "email": "shtylman@gmail.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    }
  ],
  "name": "browser-resolve",
  "optionalDependencies": {},
  "readme": "# browser-resolve [![Build Status](https://travis-ci.org/defunctzombie/node-browser-resolve.png?branch=master)](https://travis-ci.org/defunctzombie/node-browser-resolve)\n\nnode.js resolve algorithm with [browser field](https://github.com/defunctzombie/package-browser-field-spec) support.\n\n## api\n\n### resolve(id, opts={}, cb)\n\nResolve a module path and call `cb(err, path [, pkg])`\n\nOptions:\n\n* `basedir` - directory to begin resolving from\n* `browser` - the 'browser' property to use from package.json (defaults to 'browser')\n* `filename` - the calling filename where the `require()` call originated (in the source)\n* `modules` - object with module id/name -> path mappings to consult before doing manual resolution (use to provide core modules)\n* `packageFilter` - transform the parsed `package.json` contents before looking at the `main` field\n* `paths` - `require.paths` array to use if nothing is found on the normal `node_modules` recursive walk\n\nOptions supported by [node-resolve](https://github.com/substack/node-resolve#resolveid-opts-cb) can be used.\n\n### resolve.sync(id, opts={})\n\nSame as the async resolve, just uses sync methods.\n\nOptions supported by [node-resolve](https://github.com/substack/node-resolve#resolvesyncid-opts) `sync` can be used.\n\n## basic usage\n\nyou can resolve files like `require.resolve()`:\n``` js\nvar resolve = require('browser-resolve');\nresolve('../', { filename: __filename }, function(err, path) {\n    console.log(path);\n});\n```\n\n```\n$ node example/resolve.js\n/home/substack/projects/node-browser-resolve/index.js\n```\n\n## core modules\n\nBy default, core modules (http, dgram, etc) will return their same name as the path. If you want to have specific paths returned, specify a `modules` property in the options object.\n\n``` js\nvar shims = {\n    http: '/your/path/to/http.js'\n};\n\nvar resolve = require('browser-resolve');\nresolve('fs', { modules: shims }, function(err, path) {\n    console.log(path);\n});\n```\n\n```\n$ node example/builtin.js\n/home/substack/projects/node-browser-resolve/builtin/fs.js\n```\n\n## browser field\nbrowser-specific versions of modules\n\n``` js\n{\n  \"name\": \"custom\",\n  \"version\": \"0.0.0\",\n  \"browser\": {\n    \"./main.js\": \"custom.js\"\n  },\n  \"chromeapp\": {\n    \"./main.js\": \"custom-chromeapp.js\"\n  }\n}\n```\n\n``` js\nvar resolve = require('browser-resolve');\nvar parent = { filename: __dirname + '/custom/file.js' /*, browser: 'chromeapp' */ };\nresolve('./main.js', parent, function(err, path) {\n    console.log(path);\n});\n```\n\n```\n$ node example/custom.js\n/home/substack/projects/node-browser-resolve/example/custom/custom.js\n```\n\n## skip\n\nYou can skip over dependencies by setting a\n[browser field](https://gist.github.com/defunctzombie/4339901)\nvalue to `false`:\n\n``` json\n{\n  \"name\": \"skip\",\n  \"version\": \"0.0.0\",\n  \"browser\": {\n    \"tar\": false\n  }\n}\n```\n\nThis is handy if you have code like:\n\n``` js\nvar tar = require('tar');\n\nexports.add = function (a, b) {\n    return a + b;\n};\n\nexports.parse = function () {\n    return tar.Parse();\n};\n```\n\nso that `require('tar')` will just return `{}` in the browser because you don't\nintend to support the `.parse()` export in a browser environment.\n\n``` js\nvar resolve = require('browser-resolve');\nvar parent = { filename: __dirname + '/skip/main.js' };\nresolve('tar', parent, function(err, path) {\n    console.log(path);\n});\n```\n\n```\n$ node example/skip.js\n/home/substack/projects/node-browser-resolve/empty.js\n```\n\n# license\n\nMIT\n\n# upgrade notes\n\nPrior to v1.x this library provided shims for node core modules. These have since been removed. If you want to have alternative core modules provided, use the `modules` option when calling resolve.\n\nThis was done to allow package managers to choose which shims they want to use without browser-resolve being the central point of update.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/shtylman/node-browser-resolve.git"
  },
  "scripts": {
    "test": "mocha --reporter list test/*.js"
  },
  "version": "1.11.3"
}
